---
name: container security scan
on:
  schedule:
    - cron: '0 0 * * *'
  repository_dispatch:

jobs:
  gentestmatrix:
    name: generate test matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.setmatrix.outputs.matrix }}
    steps:
      - name: checkout source code
        uses: actions/checkout@v2
      - name: Install necessary software
        run: sudo apt update && sudo apt install jo tox
      - id: setmatrix
        run: |
          stringified_matrix=$(tox -q -e list-all | sed '/^|/!d; /Language/d' | awk -F"|" '{print $4}'| sed 's/^[ \t]*//;s/[ \t]*$//' | jo -a)
          echo "::set-output name=matrix::$stringified_matrix"

  snyk:
    runs-on: ubuntu-latest
    needs: gentestmatrix
    strategy:
      fail-fast: false
      matrix:
        container_url: ${{fromJson(needs.gentestmatrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - name: generate Dockerfile
        run: |
          cat << EOF > Dockerfile
          FROM ${{ matrix.container_url }}
          CMD [ "/bin/sh" ]
          EOF
      - name: Build a Docker image
        run: docker build -t ${{ matrix.container_url }} .
      - name: Run Snyk to check Docker image for vulnerabilities
        continue-on-error: true
        uses: snyk/actions/docker@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ matrix.container_url }}
          args: --file=Dockerfile
      - name: Upload the snyk result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif

  grype:
    runs-on: ubuntu-latest
    needs: gentestmatrix
    strategy:
      fail-fast: false
      matrix:
        container_url: ${{fromJson(needs.gentestmatrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - name: generate Dockerfile
        run: |
          cat << EOF > Dockerfile
          FROM ${{ matrix.container_url }}
          CMD [ "/bin/sh" ]
          EOF
      - name: Build a Docker image
        run: docker build -t ${{ matrix.container_url }} .
      - uses: anchore/scan-action@v2
        id: scan
        with:
          image: ${{ matrix.container_url }}
          acs-report-enable: true
      - name: upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  trivy:
    runs-on: ubuntu-latest
    needs: gentestmatrix
    strategy:
      fail-fast: false
      matrix:
        container_url: ${{fromJson(needs.gentestmatrix.outputs.matrix)}}
    steps:
      - uses: actions/checkout@v2
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '${{ matrix.container_url }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results.sarif'
